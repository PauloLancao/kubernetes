<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.prototype</groupId>
	<artifactId>timecard-module</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>

	<name>TimeCard-Module</name>
	<description>Spring Boot + JPA + Liquibase + PostgreSQL + Helm</description>

	<properties>
		<!-- Project -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>17</java.version>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>

		<!-- Spring boot -->
		<spring.boot.version>2.6.2</spring.boot.version>
		<postgresql.version>42.3.1</postgresql.version>
		<hibernate.core.version>5.6.4.Final</hibernate.core.version>
		<spring.restdocs.version>2.0.6.RELEASE</spring.restdocs.version>
		<liquibase.core.version>4.7.0</liquibase.core.version>
		<lombok.version>1.18.22</lombok.version>

		<!-- Swagger OpenAPI -->
		<springdoc.version>1.6.4</springdoc.version>
		<asciidoctor-plugin.version>2.2.1</asciidoctor-plugin.version>
		<snippetsDirectory>${project.build.directory}/generated-snippets</snippetsDirectory>

		<!-- Build & Deploy registry -->
		<docker.image.prefix>timecard</docker.image.prefix>
		<docker.registry.url>127.0.0.1:32701</docker.registry.url>
		<helm.chart.version>${project.version}</helm.chart.version>
		<helm.repo.url>http://localhost:32702/api/charts</helm.repo.url>

		<!-- Plugins -->
		<helm.maven.plugin.version>6.0.0</helm.maven.plugin.version>
		<dockerfile.maven.plugin.version>1.4.13</dockerfile.maven.plugin.version>
		<maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
		<maven.enforcer.plugin.version>3.0.0-M3</maven.enforcer.plugin.version>
		<maven.surefire.plugin.version>3.0.0-M5</maven.surefire.plugin.version>
	</properties>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.2</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<modules>
		<module>k8-app</module>
		<module>k8-liquibase</module>
		<module>k8-liquibase-init</module>
	</modules>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-actuator</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-validation</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate.core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-core</artifactId>
				<version>${liquibase.core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<optional>true</optional>
			</dependency>

			<!-- SpringDoc -->
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-ui</artifactId>
				<version>${springdoc.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-data-rest</artifactId>
				<version>${springdoc.version}</version>
			</dependency>

			<!-- RestDocs -->
			<dependency>
				<groupId>org.springframework.restdocs</groupId>
				<artifactId>spring-restdocs-mockmvc</artifactId>
				<version>${spring.restdocs.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.restdocs</groupId>
				<artifactId>spring-restdocs-restassured</artifactId>
				<version>${spring.restdocs.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring.boot.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.kokuwa.maven</groupId>
					<artifactId>helm-maven-plugin</artifactId>
					<version>${helm.maven.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>${dockerfile.maven.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven.enforcer.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring.boot.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<configuration>
					<repository>${docker.image.prefix}/${project.artifactId}</repository>
					<buildArgs>
						<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
					<tag>${project.version}</tag>
				</configuration>
				<executions>
					<execution>
						<id>build-image</id>
						<phase>install</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>tag-deploy-image</id>
						<phase>deploy</phase>
						<goals>
							<goal>tag</goal>
							<goal>push</goal>
						</goals>
						<configuration>
							<repository>${docker.registry.url}/${project.artifactId}</repository>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.kokuwa.maven</groupId>
				<artifactId>helm-maven-plugin</artifactId>
				<configuration>
					<chartDirectory>${project.basedir}</chartDirectory>
					<chartVersion>${helm.chart.version}</chartVersion>
					<useLocalHelmBinary>true</useLocalHelmBinary>
					<uploadRepoStable>
						<name>stable-repo</name>
						<url>${helm.repo.url}</url>
						<type>CHARTMUSEUM</type>
					</uploadRepoStable>
					<uploadRepoSnapshot>
						<name>snapshot-repo</name>
						<url>${helm.repo.url}</url>
						<type>CHARTMUSEUM</type>
					</uploadRepoSnapshot>
				</configuration>
				<executions>
					<execution>
						<id>helm-package</id>
						<phase>package</phase>
						<goals>
							<goal>dependency-build</goal>
							<goal>package</goal>
						</goals>
					</execution>
					<execution>
						<id>helm-upload</id>
						<phase>deploy</phase>
						<goals>
							<goal>upload</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-java-version</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>${java.version}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
